#!/usr/bin/env bash
set -euo pipefail

# shellcheck disable=SC2059
log_normal() {
	if [ $# -gt 0 ]; then
		printf "$@" >&2
	fi
	printf "\n" >&2
}

# shellcheck disable=SC2059
log_underlined() {
	line="$(printf "$@")"
	printf "%s\n" "${line}" >&2
	printf "%s\n" "${line//?/=}" >&2
}

scopes=()
prefix=""
create_png=false

available_cv_kinds=(full head net hft python go cover-letter)
available_scopes=("all" "${available_cv_kinds[@]}")
comma_separated_available_scopes=$(printf ", %s" "${available_scopes[@]}")
comma_separated_available_scopes=${comma_separated_available_scopes:2}

usage() {
	log_normal "Usage: $0 [-h] [-s SCOPE] [-p PREFIX] [-c]"
	log_normal
	log_normal "Options:"
	log_normal "  -h           Display this help message and exit"
	log_normal "  -s SCOPE     Specify the examples scope. Must be one of:"
	log_normal "               $comma_separated_available_scopes"
	log_normal "               Default: all"
	log_normal "  -p PREFIX    Add a prefix to the output file names"
	log_normal "  -c           Create PNGs in the build output"
}


while getopts "hs:p:c" opt; do
	case "$opt" in
		s)
			scopes+=("$OPTARG")
			;;
		p)
			prefix="$OPTARG"
			;;
		c)
			create_png=true
			;;
		?)
			usage
			exit 1
			;;
	esac
done

if [[ ${#scopes[@]} -eq 0 ]]; then
	log_normal "Building all available examples..."
	scopes=("all")
fi

shift "$((OPTIND - 1))"

if [[ "$#" -ne 0 ]]; then
	log_normal "Only flags are allowed. Extra arguments provided."
	log_normal
	usage
	exit 1
fi

is_valid_scope() {
	for available_scope in "${available_scopes[@]}"; do
		if [[ "$1" = "$available_scope" ]]; then
			return 0
		fi
	done
	return 1
}

for scope in "${scopes[@]}"; do
	if ! is_valid_scope "$scope"; then
		log_normal "Error: scope must be one of: $comma_separated_available_scopes"
		exit 1
	fi
done

for scope in "${scopes[@]}"; do
	if [[ "$scope" = "all" ]]; then
		scopes=("${available_cv_kinds[@]}")
		break
	fi
done

build_file() {
	log_underlined "PROCESSING '$1'"
	tectonic -Z search-path=. -o output "examples/$1.tex"
	prefixed_name="$1"
	if [[ -n "$prefix" ]]; then
		prefixed_name="$prefix-$1"
		mv "output/$1.pdf" "output/$prefixed_name.pdf"
	fi
	log_normal "DONE"
	log_normal

	if [[ $create_png = true ]]; then
		log_underlined "CREATING PNG FOR '$1'"
		pdftoppm -singlefile -png -r 300 "output/$prefixed_name.pdf" "output/$prefixed_name" 2> >(
			# Suppress warnings due to poppler bug: https://gitlab.freedesktop.org/poppler/poppler/-/issues/1524
			grep -v -E "Couldn't link the profiles|Can't create Lab transform" >&2
		)
		log_normal "DONE"
		log_normal
	fi
}

cd "$(dirname "$0")"
mkdir -p output

for cv in "${scopes[@]}"; do
	build_file "igrmk-$cv"
done
